"""Small helper script for plotting gas profiles generated by end to end tests
"""
import json

import click
from matplotlib import pyplot as plt

METHODS_TO_PLOT = ["mark_for_liquidation", "cancel_liquidation_slice"]


@click.command()
@click.argument("INPUT")
@click.option(
    "--output",
    default="liquidation_gas_plots.png",
    show_default=True,
    help="The output image file (including file extension)",
)
def plot(input: str, output: str):
    """Creates plots of gas cost vs queue_size using the gas profile JSON files
    generated by the liquidation auction stress test.

    INPUT: The input gas profile JSON file

    Expects the input to have "gas" and "queue_size" data for the following methods:
    mark_for_liquidation, cancel_liquidation_slice.
    """
    with open(input) as f:
        gas_profiles = json.load(f)

    fig, axs = plt.subplots(len(METHODS_TO_PLOT), 1)
    # In cases where there is only one plot:
    if isinstance(axs, plt.Axes):
        axs = [axs]

    for i, method in enumerate(METHODS_TO_PLOT):
        queue_size = list(map(int, gas_profiles[method]["queue_size"]))
        gas = list(map(int, gas_profiles[method]["gas"]))
        axs[i].scatter(queue_size, gas)
        axs[i].set_title(method)
        axs[i].set_xlabel("queue_size")
        axs[i].set_ylabel("gas_cost")

    fig.tight_layout()
    fig.savefig(output)


if __name__ == "__main__":
    plot()
