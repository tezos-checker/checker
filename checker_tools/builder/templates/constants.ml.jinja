(* Automatically generated by checker_tools.builder. DO NOT EDIT DIRECTLY! *)

open Common
open Tok

let[@inline] fminting : ratio = make_ratio (Ligo.int_from_literal "{{ config.constants.fminting.num }}") (Ligo.int_from_literal "{{ config.constants.fminting.den }}")

let[@inline] fliquidation : ratio = make_ratio (Ligo.int_from_literal "{{ config.constants.fliquidation.num }}") (Ligo.int_from_literal "{{ config.constants.fliquidation.den }}")

let[@inline] creation_deposit : tok = tok_of_denomination (Ligo.nat_from_literal "{{ config.constants.creation_deposit }}n")

let[@inline] burrow_fee_percentage : ratio = make_ratio (Ligo.int_from_literal "{{ config.constants.burrow_fee_percentage.num }}") (Ligo.int_from_literal "{{ config.constants.burrow_fee_percentage.den }}")

let[@inline] imbalance_scaling_factor : ratio = make_ratio (Ligo.int_from_literal "{{ config.constants.imbalance_scaling_factor.num }}") (Ligo.int_from_literal "{{ config.constants.imbalance_scaling_factor.den }}")

let[@inline] imbalance_limit = make_ratio (Ligo.int_from_literal "{{ config.constants.imbalance_limit.num }}") (Ligo.int_from_literal "{{ config.constants.imbalance_limit.den }}")

let[@inline] liquidation_reward_percentage : ratio = make_ratio (Ligo.int_from_literal "{{ config.constants.liquidation_reward_percentage.num }}") (Ligo.int_from_literal "{{ config.constants.liquidation_reward_percentage.den }}")

let[@inline] cfmm_fee : ratio = make_ratio (Ligo.int_from_literal "{{ config.constants.cfmm_fee.num }}") (Ligo.int_from_literal "{{ config.constants.cfmm_fee.den }}")

let[@inline] protected_index_inverse_epsilon : Ligo.int = Ligo.int_from_literal "{{ config.constants.protected_index_inverse_epsilon }}"

let[@inline] max_lot_size : tok = tok_of_denomination (Ligo.nat_from_literal "{{ config.constants.max_lot_size }}n")

let[@inline] min_lot_auction_queue_fraction : ratio = make_ratio (Ligo.int_from_literal "{{ config.constants.min_lot_auction_queue_fraction.num }}") (Ligo.int_from_literal "{{ config.constants.min_lot_auction_queue_fraction.den }}")

let[@inline] liquidation_penalty : ratio = make_ratio (Ligo.int_from_literal "{{ config.constants.liquidation_penalty.num }}") (Ligo.int_from_literal "{{ config.constants.liquidation_penalty.den }}")

let[@inline] seconds_in_a_year : Ligo.int = Ligo.int_from_literal "31556952"

let[@inline] seconds_in_a_day : Ligo.int = Ligo.int_from_literal "86400"

let[@inline] auction_decay_rate : ratio = make_ratio (Ligo.int_from_literal "{{ config.constants.auction_decay_rate.num }}") (Ligo.int_from_literal "{{ config.constants.auction_decay_rate.den }}")

let[@inline] max_bid_interval_in_seconds : Ligo.int = Ligo.int_from_literal "{{ config.constants.max_bid_interval_in_seconds }}"

let[@inline] max_bid_interval_in_blocks : Ligo.nat = Ligo.nat_from_literal "{{ config.constants.max_bid_interval_in_blocks }}n"

let[@inline] bid_improvement_factor : ratio = make_ratio (Ligo.int_from_literal "{{ config.constants.bid_improvement_factor.num }}") (Ligo.int_from_literal "{{ config.constants.bid_improvement_factor.den }}")

let[@inline] touch_reward_low_bracket : Ligo.int = Ligo.int_from_literal "{{ config.constants.touch_reward_low_bracket }}"

let[@inline] touch_low_reward : ratio = make_ratio (Ligo.int_from_literal "{{ config.constants.touch_low_reward.num }}") (Ligo.int_from_literal "{{ config.constants.touch_low_reward.den }}")

let[@inline] touch_high_reward : ratio = make_ratio (Ligo.int_from_literal "{{ config.constants.touch_high_reward.num }}") (Ligo.int_from_literal "{{ config.constants.touch_high_reward.den }}")

let[@inline] number_of_slices_to_process : Ligo.nat = Ligo.nat_from_literal "{{ config.constants.number_of_slices_to_process }}n"

let[@inline] max_liquidation_queue_height: Ligo.nat = Ligo.nat_from_literal "{{ config.constants.max_liquidation_queue_height }}n"
